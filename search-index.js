var searchIndex = JSON.parse('{\
"peroxide":{"doc":"<code>peroxide</code> is comprehensive numerical library for Rust.","i":[[0,"macros","peroxide","Useful macros",null,null],[0,"julia_macro","peroxide::macros","",null,null],[0,"matlab_macro","","",null,null],[8,"Distribution","peroxide::macros::matlab_macro","Types (distributions) that can be used to create a random …",null,null],[10,"sample","","Generate a random value of <code>T</code>, using <code>rng</code> as the source of …",0,[[]]],[11,"sample_iter","","Create an iterator that generates random values of <code>T</code>, …",0,[[],["distiter",3]]],[3,"StdRng","","The standard RNG. The PRNG algorithm in <code>StdRng</code> is chosen …",null,null],[3,"ThreadRng","","The type returned by [<code>thread_rng</code>], essentially just a …",null,null],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling …",null,null],[11,"choose","","Choose one element at random from the iterator.",1,[[],["option",4]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a …",1,[[]]],[11,"choose_multiple","","Collects <code>amount</code> values at random from the iterator into a …",1,[[],[["vec",3],["global",3]]]],[8,"SliceRandom","","Extension trait on slices, providing random mutation and …",null,null],[16,"Item","","The element type.",2,null],[10,"choose","","Returns a reference to one random element of the slice, …",2,[[],["option",4]]],[10,"choose_mut","","Returns a mutable reference to one random element of the …",2,[[],["option",4]]],[10,"choose_multiple","","Chooses <code>amount</code> elements from the slice at random, without …",2,[[],["slicechooseiter",3]]],[10,"choose_weighted","","Similar to <code>choose</code>, but where the likelihood of each …",2,[[],[["weightederror",4],["result",4]]]],[10,"choose_weighted_mut","","Similar to <code>choose_mut</code>, but where the likelihood of each …",2,[[],[["result",4],["weightederror",4]]]],[10,"shuffle","","Shuffle a mutable slice in place.",2,[[]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",2,[[]]],[5,"random","","Generates a random value using the thread-local random …",null,[[]]],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random …",null,[[],["threadrng",3]]],[8,"CryptoRng","","A marker trait used to indicate that an [<code>RngCore</code>] or …",null,null],[8,"Rng","","An automatically-implemented extension trait on [<code>RngCore</code>] …",null,null],[11,"gen","","Return a random value supporting the <code>Standard</code> …",3,[[]]],[11,"gen_range","","Generate a random value in the range [<code>low</code>, <code>high</code>), i.e. …",3,[[]]],[11,"sample","","Sample a new value, using the given distribution.",3,[[]]],[11,"sample_iter","","Create an iterator that generates values using the given …",3,[[],["distiter",3]]],[11,"fill","","Fill <code>dest</code> entirely with random bytes (uniform value …",3,[[]]],[11,"try_fill","","Fill <code>dest</code> entirely with random bytes (uniform value …",3,[[],[["result",4],["error",3]]]],[11,"gen_bool","","Return a bool with a probability <code>p</code> of being true.",3,[[]]],[11,"gen_ratio","","Return a bool with a probability of <code>numerator/denominator</code> …",3,[[]]],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random <code>u32</code>.",4,[[]]],[10,"next_u64","","Return the next random <code>u64</code>.",4,[[]]],[10,"fill_bytes","","Fill <code>dest</code> with random data.",4,[[]]],[10,"try_fill_bytes","","Fill <code>dest</code> entirely with random data.",4,[[],[["result",4],["error",3]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types …",5,null],[10,"from_seed","","Create a new PRNG using the given seed.",5,[[]]],[11,"seed_from_u64","","Create a new PRNG using a <code>u64</code> seed.",5,[[]]],[11,"from_rng","","Create a new PRNG seeded from another <code>Rng</code>.",5,[[],[["error",3],["result",4]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via <code>getrandom</code>.",5,[[]]],[0,"r_macro","peroxide::macros","R like macros",null,null],[8,"Distribution","peroxide::macros::r_macro","Types (distributions) that can be used to create a random …",null,null],[10,"sample","","Generate a random value of <code>T</code>, using <code>rng</code> as the source of …",0,[[]]],[11,"sample_iter","","Create an iterator that generates random values of <code>T</code>, …",0,[[],["distiter",3]]],[3,"StdRng","","The standard RNG. The PRNG algorithm in <code>StdRng</code> is chosen …",null,null],[3,"ThreadRng","","The type returned by [<code>thread_rng</code>], essentially just a …",null,null],[8,"IteratorRandom","","Extension trait on iterators, providing random sampling …",null,null],[11,"choose","","Choose one element at random from the iterator.",1,[[],["option",4]]],[11,"choose_multiple_fill","","Collects values at random from the iterator into a …",1,[[]]],[11,"choose_multiple","","Collects <code>amount</code> values at random from the iterator into a …",1,[[],[["vec",3],["global",3]]]],[8,"SliceRandom","","Extension trait on slices, providing random mutation and …",null,null],[16,"Item","","The element type.",2,null],[10,"choose","","Returns a reference to one random element of the slice, …",2,[[],["option",4]]],[10,"choose_mut","","Returns a mutable reference to one random element of the …",2,[[],["option",4]]],[10,"choose_multiple","","Chooses <code>amount</code> elements from the slice at random, without …",2,[[],["slicechooseiter",3]]],[10,"choose_weighted","","Similar to <code>choose</code>, but where the likelihood of each …",2,[[],[["weightederror",4],["result",4]]]],[10,"choose_weighted_mut","","Similar to <code>choose_mut</code>, but where the likelihood of each …",2,[[],[["result",4],["weightederror",4]]]],[10,"shuffle","","Shuffle a mutable slice in place.",2,[[]]],[10,"partial_shuffle","","Shuffle a slice in place, but exit early.",2,[[]]],[5,"random","","Generates a random value using the thread-local random …",null,[[]]],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random …",null,[[],["threadrng",3]]],[8,"CryptoRng","","A marker trait used to indicate that an [<code>RngCore</code>] or …",null,null],[8,"Rng","","An automatically-implemented extension trait on [<code>RngCore</code>] …",null,null],[11,"gen","","Return a random value supporting the <code>Standard</code> …",3,[[]]],[11,"gen_range","","Generate a random value in the range [<code>low</code>, <code>high</code>), i.e. …",3,[[]]],[11,"sample","","Sample a new value, using the given distribution.",3,[[]]],[11,"sample_iter","","Create an iterator that generates values using the given …",3,[[],["distiter",3]]],[11,"fill","","Fill <code>dest</code> entirely with random bytes (uniform value …",3,[[]]],[11,"try_fill","","Fill <code>dest</code> entirely with random bytes (uniform value …",3,[[],[["result",4],["error",3]]]],[11,"gen_bool","","Return a bool with a probability <code>p</code> of being true.",3,[[]]],[11,"gen_ratio","","Return a bool with a probability of <code>numerator/denominator</code> …",3,[[]]],[8,"RngCore","","The core of a random number generator.",null,null],[10,"next_u32","","Return the next random <code>u32</code>.",4,[[]]],[10,"next_u64","","Return the next random <code>u64</code>.",4,[[]]],[10,"fill_bytes","","Fill <code>dest</code> with random data.",4,[[]]],[10,"try_fill_bytes","","Fill <code>dest</code> entirely with random data.",4,[[],[["result",4],["error",3]]]],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",null,null],[16,"Seed","","Seed type, which is restricted to types …",5,null],[10,"from_seed","","Create a new PRNG using the given seed.",5,[[]]],[11,"seed_from_u64","","Create a new PRNG using a <code>u64</code> seed.",5,[[]]],[11,"from_rng","","Create a new PRNG seeded from another <code>Rng</code>.",5,[[],[["error",3],["result",4]]]],[11,"from_entropy","","Creates a new instance of the RNG seeded via <code>getrandom</code>.",5,[[]]],[0,"fuga","peroxide","Choose what you want.",null,null],[0,"ml","","Machine learning tools",null,null],[0,"reg","peroxide::ml","",null,null],[5,"least_square","peroxide::ml::reg","Simple Least Square 2D",null,[[["vec",3]],["polynomial",3]]],[0,"numerical","peroxide","Differential equations & Numerical Analysis tools",null,null],[0,"eigen","peroxide::numerical","To find Eigenvalue & Eigenvector",null,null],[4,"EigenMethod","peroxide::numerical::eigen","",null,null],[13,"Jacobi","","",6,null],[3,"Eigen","","",null,null],[12,"eigenvalue","","",7,null],[12,"eigenvector","","",7,null],[11,"extract","","",7,[[]]],[5,"eigen","","",null,[[["matrix",3],["eigenmethod",4]],["eigen",3]]],[3,"JacobiTemp","","To do Jacobi method",null,null],[12,"n","","",8,null],[12,"a","","",8,null],[12,"v","","",8,null],[12,"d","","",8,null],[12,"n_rot","","",8,null],[5,"jacobi","","",null,[[["matrix",3]],["jacobitemp",3]]],[11,"new","","",8,[[["matrix",3]]]],[11,"extract","","",8,[[],["eigen",3]]],[11,"iter","","Main Jacobi traits",8,[[]]],[0,"integral","peroxide::numerical","",null,null],[4,"Integral","peroxide::numerical::integral","",null,null],[13,"GaussLegendre","","",9,null],[13,"NewtonCotes","","",9,null],[13,"G7K15","","",9,null],[13,"G10K21","","",9,null],[13,"G15K31","","",9,null],[13,"G20K41","","",9,null],[13,"G25K51","","",9,null],[13,"G30K61","","",9,null],[5,"integrate","","Numerical Integration",null,[[["integral",4]]]],[5,"newton_cotes_quadrature","","Newton Cotes Quadrature",null,[[]]],[5,"gauss_legendre_quadrature","","Gauss Legendre Quadrature",null,[[]]],[5,"gauss_kronrod_quadrature","","Gauss Kronrod Quadrature",null,[[["integral",4]]]],[5,"kronrod_quadrature","","",null,[[]]],[0,"interp","peroxide::numerical","",null,null],[5,"chebyshev_nodes","peroxide::numerical::interp","",null,[[],["vec",3]]],[0,"newton","peroxide::numerical","",null,null],[5,"newton","peroxide::numerical::newton","Newton-Raphson Method",null,[[["vec",3],["copy",8],["fn",8]],["vec",3]]],[0,"ode","peroxide::numerical","Solver for ordinary differential equations",null,null],[4,"ExMethod","peroxide::numerical::ode","Explicit ODE Methods",null,null],[13,"Euler","","",10,null],[13,"RK4","","",10,null],[4,"ImMethod","","",null,null],[13,"BDF1","","",11,null],[13,"GL4","","",11,null],[4,"BoundaryCondition","","Kinds of Boundary Conditions",null,null],[13,"Dirichlet","","",12,null],[13,"Neumann","","",12,null],[4,"ODEOptions","","Options for ODE",null,null],[13,"InitCond","","",13,null],[13,"BoundCond","","",13,null],[13,"Method","","",13,null],[13,"StopCond","","",13,null],[13,"StepSize","","",13,null],[13,"Times","","",13,null],[8,"Environment","","",null,null],[3,"State","","State for ODE",null,null],[12,"param","","",14,null],[12,"value","","",14,null],[12,"deriv","","",14,null],[11,"to_f64","","",14,[[],["state",3]]],[11,"to_ad","","",14,[[],[["state",3],["ad",4]]]],[11,"new","","",14,[[["vec",3]]]],[8,"ODE","","ODE solver",null,null],[16,"Records","","",15,null],[16,"Param","","",15,null],[16,"ODEMethod","","",15,null],[10,"mut_update","","",15,[[]]],[10,"integrate","","",15,[[]]],[10,"set_initial_condition","","",15,[[["state",3],["real",8]]]],[10,"set_boundary_condition","","",15,[[]]],[10,"set_step_size","","",15,[[]]],[10,"set_method","","",15,[[]]],[10,"set_stop_condition","","",15,[[]]],[10,"set_times","","",15,[[]]],[10,"check_enough","","",15,[[]]],[10,"set_env","","",15,[[]]],[3,"ExplicitODE","","",null,null],[11,"new","","",16,[[]]],[11,"get_state","","",16,[[],["state",3]]],[11,"get_env","","",16,[[]]],[3,"ImplicitODE","","",null,null],[11,"new","","",17,[[]]],[11,"get_state","","",17,[[],["state",3]]],[11,"set_rtol","","",17,[[]]],[11,"get_env","","",17,[[]]],[3,"NoEnv","","",null,null],[0,"optimize","peroxide::numerical","To optimize parametric model (non-linear regression)",null,null],[4,"OptMethod","peroxide::numerical::optimize","",null,null],[13,"GradientDescent","","",18,null],[13,"GaussNewton","","",18,null],[13,"LevenbergMarquardt","","",18,null],[4,"OptOption","","",null,null],[13,"InitParam","","",19,null],[13,"MaxIter","","",19,null],[3,"Optimizer","","Optimizer for optimization (non-linear regression)",null,null],[11,"new","","",20,[[["matrix",3]]]],[11,"get_domain","","",20,[[],["vec",3]]],[11,"get_error","","",20,[[]]],[11,"set_init_param","","",20,[[["vec",3]]]],[11,"set_max_iter","","",20,[[]]],[11,"set_method","","",20,[[["optmethod",4]]]],[11,"optimize","","",20,[[],["vec",3]]],[0,"root","peroxide::numerical","Root Finding",null,null],[4,"RootState","peroxide::numerical::root","",null,null],[13,"P","","",21,null],[13,"I","","",21,null],[4,"RootFind","","",null,null],[13,"Bisection","","",22,null],[13,"Newton","","",22,null],[13,"Secant","","",22,null],[13,"FalsePosition","","",22,null],[3,"RootFinder","","Structure for Root finding",null,null],[12,"curr","","",23,null],[4,"RootError","","",null,null],[13,"MismatchedState","","",24,null],[13,"TimesUp","","",24,null],[13,"NaNRoot","","",24,null],[4,"RootBool","","",null,null],[13,"Find","","",25,null],[13,"NotYet","","",25,null],[13,"Error","","",25,null],[11,"new","","Create RootFinder",23,[[["rootstate",4],["rootfind",4]],[["result",4],["rooterror",4]]]],[11,"f","","",23,[[["ad",4]],["ad",4]]],[11,"condition_number","","Condition number",23,[[]]],[11,"set_times","","Set max iteration times",23,[[]]],[11,"set_tol","","Set tolerance",23,[[]]],[11,"update","","Update RootFinder",23,[[]]],[11,"find_root","","Find Root",23,[[],[["rooterror",4],["result",4]]]],[5,"bisection","","Bisection method to find root",null,[[["fn",8]],[["rooterror",4],["result",4]]]],[5,"false_position","","False position method to find root",null,[[["fn",8]],[["rooterror",4],["result",4]]]],[5,"newton","","Newton method to find root",null,[[["fn",8]],[["rooterror",4],["result",4]]]],[5,"secant","","Secant method to find root",null,[[["fn",8]],[["rooterror",4],["result",4]]]],[0,"spline","peroxide::numerical","",null,null],[5,"cubic_spline","peroxide::numerical::spline","Cubic Spline (Natural)",null,[[["vec",3]],[["polynomial",3],["vec",3]]]],[3,"CubicSpline","","Cubic Spline (Natural)",null,null],[11,"from_nodes","","Examples",26,[[["vec",3]]]],[11,"eval","","Evaluate cubic spline with value",26,[[]]],[11,"polynomial","","Returns a reference the <code>Polynomial</code> at the given point <code>x</code>.",26,[[],["polynomial",3]]],[11,"extend_with_nodes","","Extends the spline with the given nodes.",26,[[["vec",3]]]],[11,"number_of_polynomials","","Returns the number of polynimials that describe the …",26,[[]]],[0,"utils","peroxide::numerical","",null,null],[5,"jacobian","peroxide::numerical::utils","Jacobian Matrix",null,[[["fn",8],["vec",3]],["matrix",3]]],[5,"tdma","","TriDiagonal Matrix Algorithm (TDMA)",null,[[["vec",3]],["matrix",3]]],[0,"prelude","peroxide","Do not disturbed. Just use.",null,null],[0,"simpler","peroxide::prelude","",null,null],[8,"SimpleNorm","peroxide::prelude::simpler","Simple Norm",null,null],[10,"norm","","",27,[[]]],[10,"normalize","","",27,[[]]],[5,"integrate","","Simple integrate",null,[[["fn",8],["copy",8]]]],[8,"SimplerLinearAlgebra","","Simple Linear algebra",null,null],[10,"back_subs","","",28,[[["vec",3]],["vec",3]]],[10,"forward_subs","","",28,[[["vec",3]],["vec",3]]],[10,"lu","","",28,[[],["pqlu",3]]],[10,"waz_diag","","",28,[[],[["wazd",3],["option",4]]]],[10,"waz","","",28,[[],[["wazd",3],["option",4]]]],[10,"qr","","",28,[[],["qr",3]]],[10,"rref","","",28,[[],["matrix",3]]],[10,"det","","",28,[[]]],[10,"block","","",28,[[]]],[10,"inv","","",28,[[],["matrix",3]]],[10,"pseudo_inv","","",28,[[],["matrix",3]]],[10,"solve","","",28,[[["vec",3]],["vec",3]]],[10,"solve_mat","","",28,[[["matrix",3]],["matrix",3]]],[5,"eigen","","Simple Eigenpair",null,[[["matrix",3]],["eigen",3]]],[5,"solve","","Simple solve",null,[[["matrix",3]],["matrix",3]]],[5,"chebyshev_polynomial","","Simple Chebyshev Polynomial (First Kind)",null,[[],["polynomial",3]]],[0,"special","peroxide","Special function module",null,null],[0,"function","peroxide::special","",null,null],[5,"gaussian","peroxide::special::function","Gaussian function",null,[[]]],[5,"gamma","","Gamma function",null,[[]]],[5,"ln_gamma","","Logarithm Gamma function",null,[[]]],[5,"poch","","Pochhammer symbol",null,[[]]],[5,"inc_gamma","","Regularized incomplete gamma integral (Lower)",null,[[]]],[5,"inv_inc_gamma","","Inverse of regularized incomplete gamma integral (Lower)",null,[[]]],[5,"erf","","Error function",null,[[]]],[5,"erfc","","Complement error function",null,[[]]],[5,"inv_erf","","Inverse error function",null,[[]]],[5,"inv_erfc","","Inverse complementary error function",null,[[]]],[5,"beta","","Beta function",null,[[]]],[5,"inc_beta","","Regularized incomplete Beta function",null,[[]]],[5,"inv_inv_beta","","Inverse regularized incomplete beta function",null,[[]]],[5,"phi","","Phi (CDF for Normal Dist)",null,[[]]],[0,"lanczos","peroxide::special","Lanczos approximation Coefficient generator",null,null],[5,"ln_gamma_approx","peroxide::special::lanczos","",null,[[]]],[5,"gamma_approx","","",null,[[]]],[5,"tlg1","","Lanczos Approximation Coefficient",null,[[],["vec",3]]],[0,"statistics","peroxide","Statistical Modules",null,null],[0,"dist","peroxide::statistics","Probabilistic distributions",null,null],[4,"OPDist","peroxide::statistics::dist","One parameter distribution",null,null],[13,"Bernoulli","","",29,null],[13,"StudentT","","",29,null],[4,"TPDist","","Two parameter distribution",null,null],[13,"Uniform","","",30,null],[13,"Binomial","","",30,null],[13,"Normal","","",30,null],[13,"Beta","","",30,null],[13,"Gamma","","",30,null],[8,"ParametricDist","","Extract parameter",null,null],[16,"Parameter","","",31,null],[10,"params","","",31,[[]]],[8,"RNG","","Random Number Generator trait",null,null],[10,"sample","","Extract samples of distributions",32,[[],["vec",3]]],[10,"pdf","","Probability Distribution Function",32,[[["sampleuniform",8],["copy",8],["partialord",8],["into",8]]]],[10,"cdf","","Cumulative Distribution Function",32,[[["sampleuniform",8],["copy",8],["partialord",8],["into",8]]]],[0,"ops","peroxide::statistics","",null,null],[5,"factorial","peroxide::statistics::ops","Factorial",null,[[]]],[5,"double_factorial","","Double Factorial",null,[[]]],[5,"P","","Permutation",null,[[]]],[5,"C","","Combination",null,[[]]],[5,"H","","Combination with Repetition",null,[[]]],[0,"rand","peroxide::statistics","Simple random number generator",null,null],[5,"rand_num","peroxide::statistics::rand","Simple uniform random number generator with ThreadRng",null,[[["threadrng",3]]]],[5,"marsaglia_polar","","Gaussian random number generator using Marsaglia polar …",null,[[["threadrng",3]]]],[5,"ziggurat","","Gaussian random numbers using the Ziggurat Method",null,[[["threadrng",3]]]],[0,"stat","peroxide::statistics","Basic statistics",null,null],[8,"Statistics","peroxide::statistics::stat","Statistics Trait",null,null],[16,"Array","","",33,null],[16,"Value","","",33,null],[10,"mean","","",33,[[]]],[10,"var","","",33,[[]]],[10,"sd","","",33,[[]]],[10,"cov","","",33,[[]]],[10,"cor","","",33,[[]]],[5,"cov","","Covariance (to Value)",null,[[["vec",3]]]],[5,"cor","","Pearson\'s correlation coefficient",null,[[["vec",3]]]],[5,"lm","","R like linear regression",null,[[["matrix",3]],["matrix",3]]],[8,"OrderedStat","","Trait for Ordered Statistics",null,null],[16,"Array","","",34,null],[16,"Value","","",34,null],[10,"median","","",34,[[]]],[10,"quantile","","",34,[[["qtype",4]]]],[10,"quantiles","","",34,[[["vec",3],["qtype",4]]]],[4,"QType","","R Quantile Type enums",null,null],[13,"Type1","","",35,null],[13,"Type2","","",35,null],[13,"Type3","","",35,null],[13,"Type4","","",35,null],[13,"Type5","","",35,null],[13,"Type6","","",35,null],[13,"Type7","","",35,null],[13,"Type8","","",35,null],[13,"Type9","","",35,null],[5,"quantile","","",null,[[["qtype",4],["vec",3]],["vec",3]]],[0,"structure","peroxide","Main structures for peroxide",null,null],[0,"ad","peroxide::structure","Taylor mode forward automatic differentiation",null,null],[4,"AD","peroxide::structure::ad","",null,null],[13,"AD0","","",36,null],[13,"AD1","","",36,null],[13,"AD2","","",36,null],[11,"to_order","","",36,[[]]],[11,"order","","",36,[[]]],[11,"len","","",36,[[]]],[11,"iter","","",36,[[],["aditer",3]]],[11,"iter_mut","","",36,[[],["aditermut",3]]],[11,"from_order","","",36,[[]]],[11,"empty","","",36,[[]]],[11,"set_x","","",36,[[]]],[11,"set_dx","","",36,[[]]],[11,"set_ddx","","",36,[[]]],[11,"x","","",36,[[]]],[11,"dx","","",36,[[]]],[11,"ddx","","",36,[[]]],[11,"x_ref","","",36,[[],["option",4]]],[11,"dx_ref","","",36,[[],["option",4]]],[11,"ddx_ref","","",36,[[],["option",4]]],[11,"x_mut","","",36,[[],["option",4]]],[11,"dx_mut","","",36,[[],["option",4]]],[11,"ddx_mut","","",36,[[],["option",4]]],[3,"ADIntoIter","","",null,null],[3,"ADIter","","",null,null],[3,"ADIterMut","","",null,null],[3,"ADFn","","Generic AD functions",null,null],[11,"new","","",37,[[]]],[11,"grad","","Gradient",37,[[]]],[8,"ADVec","","",null,null],[10,"to_ad_vec","","",38,[[],[["ad",4],["vec",3]]]],[10,"to_f64_vec","","",38,[[],["vec",3]]],[0,"dataframe","peroxide::structure","Pandas-like dataframe & series.",null,null],[4,"DType","peroxide::structure::dataframe","Data Type enum",null,null],[13,"USIZE","","",39,null],[13,"U8","","",39,null],[13,"U16","","",39,null],[13,"U32","","",39,null],[13,"U64","","",39,null],[13,"ISIZE","","",39,null],[13,"I8","","",39,null],[13,"I16","","",39,null],[13,"I32","","",39,null],[13,"I64","","",39,null],[13,"F32","","",39,null],[13,"F64","","",39,null],[13,"Bool","","",39,null],[13,"Str","","",39,null],[13,"Char","","",39,null],[4,"DTypeArray","","Vector with <code>DType</code>",null,null],[13,"USIZE","","",40,null],[13,"U8","","",40,null],[13,"U16","","",40,null],[13,"U32","","",40,null],[13,"U64","","",40,null],[13,"ISIZE","","",40,null],[13,"I8","","",40,null],[13,"I16","","",40,null],[13,"I32","","",40,null],[13,"I64","","",40,null],[13,"F32","","",40,null],[13,"F64","","",40,null],[13,"Bool","","",40,null],[13,"Str","","",40,null],[13,"Char","","",40,null],[4,"DTypeValue","","Scalar with <code>DType</code>",null,null],[13,"USIZE","","",41,null],[13,"U8","","",41,null],[13,"U16","","",41,null],[13,"U32","","",41,null],[13,"U64","","",41,null],[13,"ISIZE","","",41,null],[13,"I8","","",41,null],[13,"I16","","",41,null],[13,"I32","","",41,null],[13,"I64","","",41,null],[13,"F32","","",41,null],[13,"F64","","",41,null],[13,"Bool","","",41,null],[13,"Str","","",41,null],[13,"Char","","",41,null],[3,"DataFrame","","Generic <code>DataFrame</code> structure",null,null],[12,"data","","",42,null],[12,"ics","","",42,null],[3,"Series","","Generic Series",null,null],[12,"values","","",43,null],[12,"dtype","","",43,null],[3,"Scalar","","Generic Scalar",null,null],[12,"value","","",44,null],[12,"dtype","","",44,null],[8,"TypedScalar","","",null,null],[10,"new","","",45,[[]]],[10,"unwrap","","",45,[[]]],[8,"TypedVector","","",null,null],[10,"new","","",46,[[["vec",3]]]],[10,"to_vec","","",46,[[],["vec",3]]],[10,"as_slice","","",46,[[]]],[10,"as_slice_mut","","",46,[[]]],[10,"at_raw","","",46,[[]]],[10,"push","","",46,[[]]],[10,"map","","",46,[[["fn",8]]]],[10,"mut_map","","",46,[[["fn",8]]]],[11,"is_numeric","","Check for static numeric type",39,[[]]],[11,"is_integer","","",39,[[]]],[11,"to_series","","Scalar to length 1 Series",44,[[],["series",3]]],[11,"to_string","","",44,[[],["string",3]]],[11,"at","","Getter for Series",43,[[],["scalar",3]]],[11,"len","","Length for Series",43,[[]]],[11,"to_type","","Explicit type casting for Series",43,[[["dtype",4]],["series",3]]],[11,"as_type","","Type casting for Series",43,[[["dtype",4]]]],[11,"new","","Declare new DataFrame with <code>Vec<Series></code>",42,[[["series",3],["vec",3]]]],[11,"header","","",42,[[],["vec",3]]],[11,"header_mut","","",42,[[],["vec",3]]],[11,"set_header","","Change header",42,[[["vec",3]]]],[11,"push","","Push new pair of head, Series to DataFrame",42,[[["series",3]]]],[11,"row","","Extract specific row as DataFrame",42,[[],["dataframe",3]]],[11,"spread","","",42,[[],["string",3]]],[11,"as_types","","Type casting for DataFrame",42,[[["vec",3],["dtype",4]]]],[11,"drop","","Drop specific column by header",42,[[]]],[8,"WithCSV","","To handle CSV file format",null,null],[10,"write_csv","","",47,[[],[["box",3],["result",4]]]],[10,"read_csv","","",47,[[],[["box",3],["result",4]]]],[8,"WithNetCDF","","To handle with NetCDF file format",null,null],[10,"write_nc","","",48,[[],[["box",3],["result",4]]]],[10,"read_nc","","",48,[[],[["box",3],["result",4]]]],[10,"read_nc_by_header","","",48,[[["vec",3]],[["box",3],["result",4]]]],[0,"matrix","peroxide::structure","Matrix for Scientific computation",null,null],[8,"Error","peroxide::structure::matrix","<code>Error</code> is a trait representing the basic expectations for …",null,null],[11,"source","","The lower-level source of this error, if any.",49,[[],[["option",4],["error",8]]]],[11,"backtrace","","Returns a stack backtrace, if available, of where this …",49,[[],[["backtrace",3],["option",4]]]],[11,"description","","",49,[[]]],[11,"cause","","",49,[[],[["option",4],["error",8]]]],[6,"Perms","","",null,null],[4,"Shape","","To select matrices\' binding.",null,null],[13,"Col","","",50,null],[13,"Row","","",50,null],[3,"Matrix","","R-like matrix structure",null,null],[12,"data","","",51,null],[12,"row","","",51,null],[12,"col","","",51,null],[12,"shape","","",51,null],[5,"matrix","","R-like matrix constructor",null,[[["shape",4],["vec",3]],["matrix",3]]],[5,"r_matrix","","R-like matrix constructor (Explicit ver.)",null,[[["shape",4],["vec",3]],["matrix",3]]],[5,"py_matrix","","Python-like matrix constructor",null,[[["vec",3],["vec",3]],["matrix",3]]],[5,"ml_matrix","","Matlab-like matrix constructor",null,[[],["matrix",3]]],[11,"ptr","","Raw pointer for <code>self.data</code>",51,[[]]],[11,"mut_ptr","","Raw mutable pointer for <code>self.data</code>",51,[[]]],[11,"as_slice","","Slice of <code>self.data</code>",51,[[]]],[11,"as_mut_slice","","Mutable slice of <code>self.data</code>",51,[[]]],[11,"change_shape","","Change Bindings",51,[[]]],[11,"change_shape_mut","","Change Bindings Mutably",51,[[]]],[11,"spread","","Spread data(1D vector) to 2D formatted String",51,[[],["string",3]]],[11,"col","","Extract Column",51,[[],["vec",3]]],[11,"row","","Extract Row",51,[[],["vec",3]]],[11,"diag","","Extract diagonal components",51,[[],["vec",3]]],[11,"transpose","","Transpose",51,[[]]],[11,"t","","R-like transpose function",51,[[]]],[11,"write","","Write to CSV",51,[[],[["box",3],["result",4]]]],[11,"write_round","","Write to CSV (with round option)",51,[[],[["box",3],["result",4]]]],[11,"write_with_header","","",51,[[["vec",3]],[["box",3],["result",4]]]],[11,"write_with_header_round","","",51,[[["vec",3]],[["box",3],["result",4]]]],[11,"read","","Read from CSV",51,[[],[["box",3],["matrix",3],["result",4]]]],[11,"subs","","Should check shape",51,[[["vec",3]]]],[11,"subs_col","","Substitute Col",51,[[["vec",3]]]],[11,"subs_row","","Substitute Row",51,[[["vec",3]]]],[11,"from_index","","From index operations",51,[[],["matrix",3]]],[11,"to_vec","","Matrix to <code>Vec<Vec<f64>></code>",51,[[],[["vec",3],["vec",3]]]],[11,"to_diag","","",51,[[],["matrix",3]]],[11,"submat","","Submatrix",51,[[],["matrix",3]]],[11,"subs_mat","","Substitute matrix to specific position",51,[[["matrix",3]]]],[11,"from_series","","Matrix from series",51,[[["series",3],["shape",4]]]],[8,"LinearAlgebra","","Linear algebra trait",null,null],[10,"back_subs","","",52,[[["vec",3]],["vec",3]]],[10,"forward_subs","","",52,[[["vec",3]],["vec",3]]],[10,"lu","","",52,[[],["pqlu",3]]],[10,"waz","","",52,[[["form",4]],[["option",4],["wazd",3]]]],[10,"qr","","",52,[[],["qr",3]]],[10,"svd","","",52,[[],["svd",3]]],[10,"rref","","",52,[[],["matrix",3]]],[10,"det","","",52,[[]]],[10,"block","","",52,[[]]],[10,"inv","","",52,[[],["matrix",3]]],[10,"pseudo_inv","","",52,[[],["matrix",3]]],[10,"solve","","",52,[[["vec",3],["solvekind",4]],["vec",3]]],[10,"solve_mat","","",52,[[["matrix",3],["solvekind",4]],["matrix",3]]],[5,"diag","","",null,[[],["matrix",3]]],[3,"PQLU","","Data structure for Complete Pivoting LU decomposition",null,null],[12,"p","","",53,null],[12,"q","","",53,null],[12,"l","","",53,null],[12,"u","","",53,null],[11,"extract","","",53,[[]]],[11,"det","","",53,[[]]],[11,"inv","","",53,[[],["matrix",3]]],[3,"WAZD","","",null,null],[12,"w","","",54,null],[12,"z","","",54,null],[12,"d","","",54,null],[4,"Form","","",null,null],[13,"Diagonal","","",55,null],[13,"Identity","","",55,null],[3,"QR","","",null,null],[12,"q","","",56,null],[12,"r","","",56,null],[11,"q","","",56,[[],["matrix",3]]],[11,"r","","",56,[[],["matrix",3]]],[3,"SVD","","",null,null],[12,"s","","",57,null],[12,"u","","",57,null],[12,"vt","","",57,null],[11,"u","","",57,[[],["matrix",3]]],[11,"vt","","",57,[[],["matrix",3]]],[11,"s_mat","","",57,[[],["matrix",3]]],[4,"SolveKind","","",null,null],[13,"LU","","",58,null],[13,"WAZ","","",58,null],[5,"solve","","",null,[[["matrix",3],["solvekind",4]],["matrix",3]]],[5,"combine","","Combine separated matrix to one matrix",null,[[["matrix",3]],["matrix",3]]],[5,"inv_l","","Inverse of Lower matrix",null,[[["matrix",3]],["matrix",3]]],[5,"inv_u","","Inverse of upper triangular matrix",null,[[["matrix",3]],["matrix",3]]],[5,"gemm","","GEMM wrapper for Matrixmultiply",null,[[["matrix",3],["matrix",3]]]],[5,"gemv","","General Matrix-Vector multiplication",null,[[["matrix",3],["vec",3],["vec",3]]]],[5,"gevm","","General Vector-Matrix multiplication",null,[[["matrix",3],["vec",3],["vec",3]]]],[5,"blas_mul","","Matrix multiplication with BLAS",null,[[["matrix",3]],["matrix",3]]],[4,"LAPACK_STATUS","","",null,null],[13,"Singular","","",59,null],[13,"NonSingular","","",59,null],[4,"SVD_STATUS","","",null,null],[13,"Success","","",60,null],[13,"Diverge","","",60,null],[3,"DGETRF","","Temporary data structure from <code>dgetrf</code>",null,null],[12,"fact_mat","","",61,null],[12,"ipiv","","",61,null],[12,"status","","",61,null],[3,"DGEQRF","","Temporary data structure from <code>dgeqrf</code>",null,null],[12,"fact_mat","","",62,null],[12,"tau","","",62,null],[12,"status","","",62,null],[3,"DGESVD","","",null,null],[12,"s","","",63,null],[12,"u","","",63,null],[12,"vt","","",63,null],[12,"status","","",63,null],[5,"lapack_dgetrf","","Peroxide version of <code>dgetrf</code>",null,[[["matrix",3]],[["dgetrf",3],["option",4]]]],[5,"lapack_dgetri","","Peroxide version of <code>dgetri</code>",null,[[["dgetrf",3]],[["option",4],["matrix",3]]]],[5,"lapack_dgetrs","","Peroxide version of <code>dgetrs</code>",null,[[["dgetrf",3],["matrix",3]],[["option",4],["matrix",3]]]],[5,"lapack_dgeqrf","","Peroxide version of <code>dgeqrf</code>",null,[[["matrix",3]],[["dgeqrf",3],["option",4]]]],[5,"lapack_dgesvd","","",null,[[["matrix",3]],[["dgesvd",3],["option",4]]]],[11,"get_P","","",61,[[],["vec",3]]],[11,"get_L","","",61,[[],["matrix",3]]],[11,"get_U","","",61,[[],["matrix",3]]],[11,"get_cond","","",61,[[],["option",4]]],[11,"get_Q","","",62,[[],["matrix",3]]],[11,"get_R","","",62,[[],["matrix",3]]],[5,"gen_householder","","",null,[[["vec",3]],["matrix",3]]],[0,"multinomial","peroxide::structure","",null,null],[3,"Multinomial","peroxide::structure::multinomial","",null,null],[11,"new","","",64,[[["vec",3]]]],[11,"eval","","",64,[[["vec",3]]]],[0,"polynomial","peroxide::structure","",null,null],[3,"Polynomial","peroxide::structure::polynomial","Polynomial Structure",null,null],[12,"coef","","",65,null],[11,"new","","Create Polynomial",65,[[["vec",3]]]],[11,"eval","","Evaluate polynomial with value according to Horner\'s …",65,[[]]],[11,"eval_vec","","",65,[[["vec",3]],["vec",3]]],[11,"translate_x","","Linear transformation of a polynomial by a given x …",65,[[]]],[5,"poly","","Convenient to declare polynomial",null,[[["vec",3]],["polynomial",3]]],[8,"Calculus","","",null,null],[10,"diff","","",66,[[]]],[10,"integral","","",66,[[]]],[5,"lagrange_polynomial","","Lagrange Polynomial",null,[[["vec",3]],["polynomial",3]]],[5,"legendre_polynomial","","Legendre Polynomial",null,[[],["polynomial",3]]],[4,"SpecialKind","","",null,null],[13,"First","","",67,null],[13,"Second","","",67,null],[5,"chebyshev_polynomial","","Chebyshev Polynomial",null,[[["specialkind",4]],["polynomial",3]]],[0,"sparse","peroxide::structure","Sparse matrix (CCS format)",null,null],[3,"SPMatrix","peroxide::structure::sparse","",null,null],[12,"row","","",68,null],[12,"col","","",68,null],[12,"nnz","","",68,null],[12,"col_ptr","","",68,null],[12,"row_ics","","",68,null],[12,"data","","",68,null],[11,"new","","",68,[[]]],[11,"from_dense","","",68,[[["matrix",3]]]],[11,"to_dense","","",68,[[],["matrix",3]]],[11,"col_ptr","","",68,[[],["vec",3]]],[11,"row_ics","","",68,[[],["vec",3]]],[11,"data","","",68,[[],["vec",3]]],[11,"transpose","","",68,[[]]],[11,"t","","",68,[[]]],[0,"vector","peroxide::structure","Extra tools for <code>Vec<f64></code>",null,null],[5,"map","peroxide::structure::vector","Explicit version of <code>map</code>",null,[[["vec",3]],["vec",3]]],[5,"reduce","","Explicit version of <code>reduce</code>",null,[[["vec",3]]]],[5,"zip_with","","Explicit version of <code>zip_with</code>",null,[[["vec",3]],["vec",3]]],[5,"blas_daxpy","","",null,[[["vec",3],["vec",3]]]],[5,"blas_daxpy_return","","",null,[[["vec",3]],["vec",3]]],[0,"traits","peroxide","",null,null],[0,"fp","peroxide::traits","",null,null],[8,"FPVector","peroxide::traits::fp","Functional Programming tools for Vector",null,null],[16,"Scalar","","",69,null],[10,"fmap","","",69,[[]]],[10,"reduce","","",69,[[]]],[10,"zip_with","","",69,[[]]],[10,"filter","","",69,[[]]],[10,"take","","",69,[[]]],[10,"skip","","",69,[[]]],[10,"sum","","",69,[[]]],[10,"prod","","",69,[[]]],[8,"FPMatrix","","Functional Programming for Matrix",null,null],[10,"take_row","","",70,[[],["matrix",3]]],[10,"take_col","","",70,[[],["matrix",3]]],[10,"skip_row","","",70,[[],["matrix",3]]],[10,"skip_col","","",70,[[],["matrix",3]]],[10,"fmap","","",70,[[],["matrix",3]]],[10,"col_map","","",70,[[],["matrix",3]]],[10,"row_map","","",70,[[],["matrix",3]]],[10,"col_mut_map","","",70,[[]]],[10,"row_mut_map","","",70,[[]]],[10,"reduce","","",70,[[]]],[10,"zip_with","","",70,[[["matrix",3]],["matrix",3]]],[10,"col_reduce","","",70,[[],["vec",3]]],[10,"row_reduce","","",70,[[],["vec",3]]],[0,"general","peroxide::traits","",null,null],[8,"Algorithm","peroxide::traits::general","Some algorithms for Vector",null,null],[10,"rank","","",71,[[],["vec",3]]],[10,"sign","","",71,[[]]],[10,"arg_max","","",71,[[]]],[10,"swap_with_perm","","",71,[[["vec",3]]]],[0,"math","peroxide::traits","",null,null],[8,"Vector","peroxide::traits::math","Mathematical Vector",null,null],[16,"Scalar","","",72,null],[10,"add_vec","","",72,[[]]],[10,"sub_vec","","",72,[[]]],[10,"mul_scalar","","",72,[[]]],[4,"Norm","","Kinds of Vector & Matrix norm",null,null],[13,"L1","","",73,null],[13,"L2","","",73,null],[13,"Lp","","",73,null],[13,"LInf","","",73,null],[13,"F","","",73,null],[13,"Lpq","","",73,null],[8,"Normed","","Normed Vector",null,null],[16,"UnsignedScalar","","",74,null],[10,"norm","","",74,[[["norm",4]]]],[10,"normalize","","",74,[[["norm",4]]]],[8,"InnerProduct","","Inner product Vector",null,null],[10,"dot","","",75,[[]]],[8,"LinearOp","","Linear operation for Vector",null,null],[10,"apply","","",76,[[]]],[8,"VectorProduct","","Vector Products",null,null],[10,"cross","","",77,[[]]],[10,"outer","","",77,[[],["matrix",3]]],[8,"MatrixProduct","","Matrix Products",null,null],[10,"kronecker","","",78,[[],["matrix",3]]],[10,"hadamard","","",78,[[],["matrix",3]]],[0,"mutable","peroxide::traits","",null,null],[8,"MutFP","peroxide::traits::mutable","",null,null],[16,"Scalar","","",79,null],[10,"mut_map","","",79,[[]]],[10,"mut_zip_with","","",79,[[]]],[8,"MutMatrix","","",null,null],[10,"col_mut","","",80,[[],["vec",3]]],[10,"row_mut","","",80,[[],["vec",3]]],[10,"swap","","",80,[[["shape",4]]]],[10,"swap_with_perm","","",80,[[["vec",3],["shape",4]]]],[0,"num","peroxide::traits","Missing operations & comprehensive number structures",null,null],[8,"PowOps","peroxide::traits::num","",null,null],[10,"powi","","",81,[[]]],[10,"powf","","",81,[[]]],[10,"pow","","",81,[[]]],[11,"sqrt","","",81,[[]]],[8,"TrigOps","","",null,null],[10,"sin_cos","","",82,[[]]],[10,"sinh_cosh","","",82,[[]]],[11,"sin","","",82,[[]]],[11,"cos","","",82,[[]]],[11,"tan","","",82,[[]]],[10,"asin","","",82,[[]]],[10,"acos","","",82,[[]]],[10,"atan","","",82,[[]]],[11,"sinh","","",82,[[]]],[11,"cosh","","",82,[[]]],[11,"tanh","","",82,[[]]],[10,"asinh","","",82,[[]]],[10,"acosh","","",82,[[]]],[10,"atanh","","",82,[[]]],[8,"ExpLogOps","","",null,null],[10,"exp","","",83,[[]]],[10,"ln","","",83,[[]]],[10,"log","","",83,[[]]],[11,"log2","","",83,[[]]],[11,"log10","","",83,[[]]],[8,"Real","","",null,null],[10,"to_f64","","",84,[[]]],[10,"from_f64","","",84,[[]]],[10,"to_ad","","",84,[[],["ad",4]]],[0,"pointer","peroxide::traits","Pointer toolbox",null,null],[3,"Redox","peroxide::traits::pointer","",null,null],[8,"RedoxCommon","","",null,null],[16,"ToRedox","","",85,null],[10,"from_vec","","",85,[[]]],[10,"red","","",85,[[]]],[8,"Oxide","","",null,null],[10,"ox","","",86,[[],["redox",3]]],[8,"MatrixPtr","","Pointer for col or row",null,null],[10,"row_ptr","","",87,[[],["vec",3]]],[10,"col_ptr","","",87,[[],["vec",3]]],[0,"stable","peroxide::traits","Stable implementations for nightly-only features",null,null],[8,"StableFn","peroxide::traits::stable","Stable Fn trait",null,null],[16,"Output","","",88,null],[10,"call_stable","","",88,[[]]],[0,"sugar","peroxide::traits","",null,null],[8,"VecOps","peroxide::traits::sugar","Syntactic sugar for Vector operations",null,null],[11,"add_v","","",89,[[]]],[11,"sub_v","","",89,[[]]],[11,"mul_v","","",89,[[]]],[11,"div_v","","",89,[[]]],[11,"add_s","","",89,[[]]],[11,"sub_s","","",89,[[]]],[11,"mul_s","","",89,[[]]],[11,"div_s","","",89,[[]]],[8,"Scalable","","",null,null],[16,"Vec","","",90,null],[10,"resize","","",90,[[["shape",4]],["matrix",3]]],[10,"add_col","","",90,[[],["matrix",3]]],[10,"add_row","","",90,[[],["matrix",3]]],[8,"ScalableMut","","",null,null],[16,"Vec","","",91,null],[10,"resize_mut","","",91,[[["shape",4]]]],[10,"add_col_mut","","",91,[[]]],[10,"add_row_mut","","",91,[[]]],[8,"ConvToMat","","",null,null],[10,"to_col","","",92,[[],["matrix",3]]],[10,"to_row","","",92,[[],["matrix",3]]],[0,"util","peroxide","Utility - plot, print, pickle and etc.",null,null],[0,"api","peroxide::util","Choose api - MATLAB, R, Python",null,null],[8,"MATLAB","peroxide::util::api","",null,null],[10,"new","","",93,[[]]],[8,"PYTHON","","",null,null],[10,"new","","",94,[[["vec",3],["vec",3]]]],[8,"R","","",null,null],[10,"new","","",95,[[["shape",4],["vec",3]]]],[0,"non_macro","peroxide::util","Macro to non macro function",null,null],[5,"seq","peroxide::util::non_macro","R like seq function",null,[[],["vec",3]]],[5,"zeros","","MATLAB like zeros (Matrix)",null,[[],["matrix",3]]],[5,"zeros_shape","","Zeros with custom shape",null,[[["shape",4]],["matrix",3]]],[5,"concat","","",null,[[["vec",3]],[["copy",8],["clone",8],["vec",3]]]],[5,"cat","","",null,[[["copy",8],["clone",8],["vec",3],["default",8]],[["copy",8],["default",8],["clone",8],["vec",3]]]],[5,"eye","","MATLAB like eye - Identity matrix",null,[[],["matrix",3]]],[5,"eye_shape","","eye with custom shape",null,[[["shape",4]],["matrix",3]]],[5,"cbind","","R like cbind - concatenate two matrix by column direction",null,[[["matrix",3]],["matrix",3]]],[5,"rbind","","R like rbind - concatenate two matrix by row direction",null,[[["matrix",3]],["matrix",3]]],[5,"rand","","Rand matrix",null,[[],["matrix",3]]],[0,"plot","peroxide::util","Plotting module for peroxide",null,null],[4,"PlotOptions","peroxide::util::plot","",null,null],[13,"Domain","","",96,null],[13,"Images","","",96,null],[13,"Pairs","","",96,null],[13,"Legends","","",96,null],[13,"Path","","",96,null],[4,"Markers","","",null,null],[13,"Point","","",97,null],[13,"Line","","",97,null],[13,"Circle","","",97,null],[4,"Grid","","",null,null],[13,"On","","",98,null],[13,"Off","","",98,null],[8,"Plot","","",null,null],[10,"set_domain","","",99,[[["vec",3]]]],[10,"insert_image","","",99,[[["vec",3]]]],[10,"insert_pair","","",99,[[]]],[10,"set_title","","",99,[[]]],[10,"set_xlabel","","",99,[[]]],[10,"set_ylabel","","",99,[[]]],[10,"set_zlabel","","",99,[[]]],[10,"set_legend","","",99,[[["vec",3]]]],[10,"set_path","","",99,[[]]],[10,"set_fig_size","","",99,[[]]],[10,"set_dpi","","",99,[[]]],[10,"grid","","",99,[[["grid",4]]]],[10,"set_marker","","",99,[[["markers",4],["vec",3]]]],[10,"savefig","","",99,[[],["pyresult",6]]],[3,"Plot2D","","",null,null],[11,"new","","",100,[[]]],[0,"low_level","peroxide::util","",null,null],[5,"copy_vec_ptr","peroxide::util::low_level","",null,[[["vec",3],["vec",3]]]],[5,"swap_vec_ptr","","",null,[[["vec",3]]]],[5,"ptr_to_vec","","",null,[[["vec",3]],["vec",3]]],[0,"print","peroxide::util","Easy to print any structures",null,null],[8,"Printable","peroxide::util::print","",null,null],[10,"print","","",101,[[]]],[0,"useful","peroxide::util","Useful missing tools",null,null],[5,"nearly_eq","peroxide::util::useful","Near equal",null,[[]]],[5,"tab","","",null,[[],["string",3]]],[5,"quot_rem","","",null,[[]]],[5,"choose_shorter_string","","",null,[[["string",3]],["string",3]]],[5,"choose_shorter_vec","","",null,[[["vec",3]],["vec",3]]],[5,"choose_longer_vec","","",null,[[["vec",3]],["vec",3]]],[5,"max","","",null,[[["vec",3]]]],[5,"min","","",null,[[["vec",3]]]],[5,"sgn","","Signum function",null,[[]]],[5,"eq_vec","","Vector compare",null,[[["vec",3]]]],[0,"wrapper","peroxide::util","",null,null],[8,"SampleRNG","peroxide::util::wrapper","Extract no-duplicate sample from Vector",null,null],[16,"Item","","",102,null],[10,"sample","","",102,[[],["vec",3]]],[0,"writer","peroxide::util","More convenient matrix writer",null,null],[4,"ToWriter","peroxide::util::writer","",null,null],[13,"Header","","",103,null],[13,"Round","","",103,null],[13,"Data","","",103,null],[13,"Path","","",103,null],[4,"Queue","","",null,null],[13,"Matrix","","",104,null],[13,"Vector","","",104,null],[3,"SimpleWriter","","Simple Matrix Writer",null,null],[11,"new","","",105,[[],["simplewriter",3]]],[11,"insert_header","","",105,[[["vec",3]]]],[11,"set_round_level","","",105,[[]]],[11,"insert_matrix","","",105,[[["matrix",3]]]],[11,"insert_vector","","",105,[[["vec",3]]]],[11,"set_path","","",105,[[]]],[11,"write_csv","","",105,[[]]],[14,"hstack","peroxide","",null,null],[14,"vstack","","",null,null],[14,"zeros","","MATLAB like zeros - zero matrix",null,null],[14,"rand","","MATLAB like rand - random matrix",null,null],[14,"eye","","MATLAB like eye - identity matrix",null,null],[14,"linspace","","MATLAB like linspace",null,null],[14,"c","","R like concatenate (Type: Vec<f64>)",null,null],[14,"seq","","R like seq macro",null,null],[14,"matrix","","More R like Matrix constructor (Macro)",null,null],[14,"cbind","","R like cbind",null,null],[14,"rbind","","R like rbind",null,null],[14,"runif","","R like random uniform",null,null],[14,"rnorm","","R like random normal",null,null],[14,"dnorm","","R like <code>dnorm</code>",null,null],[14,"pnorm","","R like <code>pnorm</code>",null,null],[14,"rt","","R like random Student\'s t",null,null],[14,"dt","","R like <code>dt</code>",null,null],[14,"pt","","R like <code>pt</code>",null,null],[14,"lm","","R like lm",null,null],[11,"from","peroxide::macros::r_macro","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"from","peroxide::numerical::eigen","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","peroxide::numerical::integral","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","peroxide::numerical::ode","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"from","peroxide::numerical::optimize","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","peroxide::numerical::root","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","peroxide::numerical::spline","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","peroxide::statistics::dist","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","peroxide::statistics::stat","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","peroxide::structure::ad","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"to_string","","",36,[[],["string",3]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"into_iter","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"into_iter","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"into_iter","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","peroxide::structure::dataframe","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"to_string","","",40,[[],["string",3]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","peroxide::structure::matrix","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","peroxide::structure::multinomial","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","peroxide::structure::polynomial","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"to_string","","",65,[[],["string",3]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","peroxide::structure::sparse","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"from","peroxide::traits::math","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"from","peroxide::traits::pointer","",112,[[]]],[11,"into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"from","peroxide::util::plot","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"from","peroxide::util::writer","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"default","peroxide::macros::r_macro","",107,[[],["threadrng",3]]],[11,"from_seed","","",106,[[],["stdrng",3]]],[11,"from_rng","","",106,[[],[["result",4],["stdrng",3],["error",3]]]],[11,"next_u32","","",106,[[]]],[11,"next_u64","","",106,[[]]],[11,"fill_bytes","","",106,[[]]],[11,"try_fill_bytes","","",106,[[],[["result",4],["error",3]]]],[11,"next_u32","","",107,[[]]],[11,"next_u64","","",107,[[]]],[11,"fill_bytes","","",107,[[]]],[11,"try_fill_bytes","","",107,[[],[["result",4],["error",3]]]],[11,"clone","","",106,[[],["stdrng",3]]],[11,"clone","","",107,[[],["threadrng",3]]],[11,"fmt","","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"read","","",4,[[],[["error",3],["result",4]]]],[11,"mut_update","peroxide::numerical::ode","",16,[[]]],[11,"integrate","","",16,[[]]],[11,"set_initial_condition","","",16,[[["state",3],["real",8]]]],[11,"set_boundary_condition","","",16,[[]]],[11,"set_step_size","","",16,[[]]],[11,"set_method","","",16,[[]]],[11,"set_stop_condition","","",16,[[]]],[11,"set_times","","",16,[[]]],[11,"check_enough","","",16,[[]]],[11,"set_env","","",16,[[]]],[11,"mut_update","","",17,[[]]],[11,"integrate","","",17,[[]]],[11,"set_initial_condition","","",17,[[["state",3],["real",8]]]],[11,"set_boundary_condition","","",17,[[]]],[11,"set_step_size","","",17,[[]]],[11,"set_method","","",17,[[]]],[11,"set_stop_condition","","",17,[[]]],[11,"set_times","","",17,[[]]],[11,"check_enough","","",17,[[]]],[11,"set_env","","",17,[[]]],[11,"norm","peroxide::structure::matrix","",51,[[]]],[11,"normalize","","",51,[[]]],[11,"back_subs","","",51,[[["vec",3]],["vec",3]]],[11,"forward_subs","","",51,[[["vec",3]],["vec",3]]],[11,"lu","","",51,[[],["pqlu",3]]],[11,"waz","","",51,[[],[["wazd",3],["option",4]]]],[11,"waz_diag","","",51,[[],[["wazd",3],["option",4]]]],[11,"qr","","",51,[[],["qr",3]]],[11,"rref","","",51,[[],["matrix",3]]],[11,"det","","",51,[[]]],[11,"block","","",51,[[]]],[11,"inv","","",51,[[],["matrix",3]]],[11,"pseudo_inv","","",51,[[],["matrix",3]]],[11,"solve","","",51,[[["vec",3]],["vec",3]]],[11,"solve_mat","","",51,[[["matrix",3]],["matrix",3]]],[11,"params","peroxide::statistics::dist","",29,[[]]],[11,"params","","",30,[[]]],[11,"sample","","",29,[[],["vec",3]]],[11,"pdf","","",29,[[["sampleuniform",8],["copy",8],["partialord",8],["into",8]]]],[11,"cdf","","",29,[[["sampleuniform",8],["copy",8],["partialord",8],["into",8]]]],[11,"sample","","",30,[[],["vec",3]]],[11,"pdf","","",30,[[["sampleuniform",8],["copy",8],["partialord",8],["into",8]]]],[11,"cdf","","",30,[[["sampleuniform",8],["copy",8],["partialord",8],["into",8]]]],[11,"mean","","",29,[[]]],[11,"var","","",29,[[]]],[11,"sd","","",29,[[]]],[11,"cov","","",29,[[]]],[11,"cor","","",29,[[]]],[11,"mean","","",30,[[]]],[11,"var","","",30,[[]]],[11,"sd","","",30,[[]]],[11,"cov","","",30,[[]]],[11,"cor","","",30,[[]]],[11,"mean","peroxide::structure::matrix","Column Mean",51,[[],["vec",3]]],[11,"var","","Column variance",51,[[],["vec",3]]],[11,"sd","","Column Standard Deviation",51,[[],["vec",3]]],[11,"cov","","Covariance Matrix (Column based)",51,[[]]],[11,"cor","","",51,[[]]],[11,"new","peroxide::structure::dataframe","",44,[[]]],[11,"unwrap","","",44,[[]]],[11,"new","","",44,[[]]],[11,"unwrap","","",44,[[]]],[11,"new","","",44,[[]]],[11,"unwrap","","",44,[[]]],[11,"new","","",44,[[]]],[11,"unwrap","","",44,[[]]],[11,"new","","",44,[[]]],[11,"unwrap","","",44,[[]]],[11,"new","","",44,[[]]],[11,"unwrap","","",44,[[]]],[11,"new","","",44,[[]]],[11,"unwrap","","",44,[[]]],[11,"new","","",44,[[]]],[11,"unwrap","","",44,[[]]],[11,"new","","",44,[[]]],[11,"unwrap","","",44,[[]]],[11,"new","","",44,[[]]],[11,"unwrap","","",44,[[]]],[11,"new","","",44,[[]]],[11,"unwrap","","",44,[[]]],[11,"new","","",44,[[]]],[11,"unwrap","","",44,[[]]],[11,"new","","",44,[[]]],[11,"unwrap","","",44,[[]]],[11,"new","","",44,[[]]],[11,"unwrap","","",44,[[]]],[11,"new","","",44,[[["string",3]]]],[11,"unwrap","","",44,[[],["string",3]]],[11,"new","","",43,[[["vec",3]]]],[11,"to_vec","","",43,[[],["vec",3]]],[11,"as_slice","","",43,[[]]],[11,"as_slice_mut","","",43,[[]]],[11,"at_raw","","",43,[[]]],[11,"push","","",43,[[]]],[11,"map","","",43,[[["fn",8]]]],[11,"mut_map","","",43,[[["fn",8]]]],[11,"new","","",43,[[["vec",3]]]],[11,"to_vec","","",43,[[],["vec",3]]],[11,"as_slice","","",43,[[]]],[11,"as_slice_mut","","",43,[[]]],[11,"at_raw","","",43,[[]]],[11,"push","","",43,[[]]],[11,"map","","",43,[[["fn",8]]]],[11,"mut_map","","",43,[[["fn",8]]]],[11,"new","","",43,[[["vec",3]]]],[11,"to_vec","","",43,[[],["vec",3]]],[11,"as_slice","","",43,[[]]],[11,"as_slice_mut","","",43,[[]]],[11,"at_raw","","",43,[[]]],[11,"push","","",43,[[]]],[11,"map","","",43,[[["fn",8]]]],[11,"mut_map","","",43,[[["fn",8]]]],[11,"new","","",43,[[["vec",3]]]],[11,"to_vec","","",43,[[],["vec",3]]],[11,"as_slice","","",43,[[]]],[11,"as_slice_mut","","",43,[[]]],[11,"at_raw","","",43,[[]]],[11,"push","","",43,[[]]],[11,"map","","",43,[[["fn",8]]]],[11,"mut_map","","",43,[[["fn",8]]]],[11,"new","","",43,[[["vec",3]]]],[11,"to_vec","","",43,[[],["vec",3]]],[11,"as_slice","","",43,[[]]],[11,"as_slice_mut","","",43,[[]]],[11,"at_raw","","",43,[[]]],[11,"push","","",43,[[]]],[11,"map","","",43,[[["fn",8]]]],[11,"mut_map","","",43,[[["fn",8]]]],[11,"new","","",43,[[["vec",3]]]],[11,"to_vec","","",43,[[],["vec",3]]],[11,"as_slice","","",43,[[]]],[11,"as_slice_mut","","",43,[[]]],[11,"at_raw","","",43,[[]]],[11,"push","","",43,[[]]],[11,"map","","",43,[[["fn",8]]]],[11,"mut_map","","",43,[[["fn",8]]]],[11,"new","","",43,[[["vec",3]]]],[11,"to_vec","","",43,[[],["vec",3]]],[11,"as_slice","","",43,[[]]],[11,"as_slice_mut","","",43,[[]]],[11,"at_raw","","",43,[[]]],[11,"push","","",43,[[]]],[11,"map","","",43,[[["fn",8]]]],[11,"mut_map","","",43,[[["fn",8]]]],[11,"new","","",43,[[["vec",3]]]],[11,"to_vec","","",43,[[],["vec",3]]],[11,"as_slice","","",43,[[]]],[11,"as_slice_mut","","",43,[[]]],[11,"at_raw","","",43,[[]]],[11,"push","","",43,[[]]],[11,"map","","",43,[[["fn",8]]]],[11,"mut_map","","",43,[[["fn",8]]]],[11,"new","","",43,[[["vec",3]]]],[11,"to_vec","","",43,[[],["vec",3]]],[11,"as_slice","","",43,[[]]],[11,"as_slice_mut","","",43,[[]]],[11,"at_raw","","",43,[[]]],[11,"push","","",43,[[]]],[11,"map","","",43,[[["fn",8]]]],[11,"mut_map","","",43,[[["fn",8]]]],[11,"new","","",43,[[["vec",3]]]],[11,"to_vec","","",43,[[],["vec",3]]],[11,"as_slice","","",43,[[]]],[11,"as_slice_mut","","",43,[[]]],[11,"at_raw","","",43,[[]]],[11,"push","","",43,[[]]],[11,"map","","",43,[[["fn",8]]]],[11,"mut_map","","",43,[[["fn",8]]]],[11,"new","","",43,[[["vec",3]]]],[11,"to_vec","","",43,[[],["vec",3]]],[11,"as_slice","","",43,[[]]],[11,"as_slice_mut","","",43,[[]]],[11,"at_raw","","",43,[[]]],[11,"push","","",43,[[]]],[11,"map","","",43,[[["fn",8]]]],[11,"mut_map","","",43,[[["fn",8]]]],[11,"new","","",43,[[["vec",3]]]],[11,"to_vec","","",43,[[],["vec",3]]],[11,"as_slice","","",43,[[]]],[11,"as_slice_mut","","",43,[[]]],[11,"at_raw","","",43,[[]]],[11,"push","","",43,[[]]],[11,"map","","",43,[[["fn",8]]]],[11,"mut_map","","",43,[[["fn",8]]]],[11,"new","","",43,[[["vec",3]]]],[11,"to_vec","","",43,[[],["vec",3]]],[11,"as_slice","","",43,[[]]],[11,"as_slice_mut","","",43,[[]]],[11,"at_raw","","",43,[[]]],[11,"push","","",43,[[]]],[11,"map","","",43,[[["fn",8]]]],[11,"mut_map","","",43,[[["fn",8]]]],[11,"new","","",43,[[["vec",3]]]],[11,"to_vec","","",43,[[],["vec",3]]],[11,"as_slice","","",43,[[]]],[11,"as_slice_mut","","",43,[[]]],[11,"at_raw","","",43,[[]]],[11,"push","","",43,[[]]],[11,"map","","",43,[[["fn",8]]]],[11,"mut_map","","",43,[[["fn",8]]]],[11,"new","","",43,[[["vec",3],["string",3]]]],[11,"to_vec","","",43,[[],[["vec",3],["string",3]]]],[11,"as_slice","","",43,[[]]],[11,"as_slice_mut","","",43,[[]]],[11,"at_raw","","",43,[[],["string",3]]],[11,"push","","",43,[[["string",3]]]],[11,"map","","",43,[[["fn",8]]]],[11,"mut_map","","",43,[[["fn",8]]]],[11,"write_csv","","Write csv file",42,[[],[["box",3],["result",4]]]],[11,"read_csv","","Read csv file with delimiter",42,[[],[["box",3],["result",4]]]],[11,"write_nc","","write netcdf file",42,[[],[["box",3],["result",4]]]],[11,"read_nc","","Read netcdf to DataFrame",42,[[],[["box",3],["result",4]]]],[11,"read_nc_by_header","","Read netcdf to DataFrame with specific header",42,[[["vec",3]],[["box",3],["result",4]]]],[11,"back_subs","peroxide::structure::matrix","Backward Substitution for Upper Triangular",51,[[["vec",3]],["vec",3]]],[11,"forward_subs","","Forward substitution for Lower Triangular",51,[[["vec",3]],["vec",3]]],[11,"lu","","LU Decomposition Implements (Complete Pivot)",51,[[],["pqlu",3]]],[11,"waz","","",51,[[["form",4]],[["option",4],["wazd",3]]]],[11,"qr","","QR Decomposition",51,[[],["qr",3]]],[11,"svd","","Singular Value Decomposition",51,[[],["svd",3]]],[11,"rref","","Reduced Row Echelon Form",51,[[],["matrix",3]]],[11,"det","","Determinant",51,[[]]],[11,"block","","Block Partition",51,[[]]],[11,"inv","","Inverse of Matrix",51,[[]]],[11,"pseudo_inv","","Moore-Penrose Pseudo inverse",51,[[]]],[11,"solve","","Solve with Vector",51,[[["vec",3],["solvekind",4]],["vec",3]]],[11,"solve_mat","","",51,[[["matrix",3],["solvekind",4]],["matrix",3]]],[11,"back_subs","peroxide::structure::sparse","",68,[[["vec",3]],["vec",3]]],[11,"forward_subs","","",68,[[["vec",3]],["vec",3]]],[11,"lu","","",68,[[],["pqlu",3]]],[11,"waz","","",68,[[["form",4]],[["option",4],["wazd",3]]]],[11,"qr","","",68,[[],["qr",3]]],[11,"det","","",68,[[]]],[11,"block","","",68,[[]]],[11,"inv","","",68,[[],["matrix",3]]],[11,"pseudo_inv","","",68,[[],["matrix",3]]],[11,"rref","","",68,[[],["matrix",3]]],[11,"solve","","",68,[[["vec",3],["solvekind",4]],["vec",3]]],[11,"solve_mat","","",68,[[["matrix",3],["solvekind",4]],["matrix",3]]],[11,"svd","","",68,[[],["svd",3]]],[11,"diff","peroxide::numerical::spline","",26,[[]]],[11,"integral","","",26,[[]]],[11,"diff","peroxide::structure::polynomial","",65,[[]]],[11,"integral","","",65,[[]]],[11,"take_row","peroxide::structure::matrix","",51,[[]]],[11,"take_col","","",51,[[]]],[11,"skip_row","","",51,[[]]],[11,"skip_col","","",51,[[]]],[11,"fmap","","",51,[[],["matrix",3]]],[11,"col_map","","",51,[[],["matrix",3]]],[11,"row_map","","",51,[[],["matrix",3]]],[11,"col_mut_map","","",51,[[]]],[11,"row_mut_map","","",51,[[]]],[11,"reduce","","",51,[[]]],[11,"zip_with","","",51,[[["matrix",3]]]],[11,"col_reduce","","",51,[[],["vec",3]]],[11,"row_reduce","","",51,[[],["vec",3]]],[11,"add_vec","peroxide::structure::dataframe","Add series",43,[[]]],[11,"sub_vec","","Sub series",43,[[]]],[11,"mul_scalar","","Mul Scalar",43,[[]]],[11,"add_vec","peroxide::structure::matrix","",51,[[]]],[11,"sub_vec","","",51,[[]]],[11,"mul_scalar","","",51,[[]]],[11,"norm","","",51,[[["norm",4]]]],[11,"normalize","","",51,[[["norm",4]]]],[11,"dot","","",51,[[]]],[11,"apply","","",51,[[["vec",3]],["vec",3]]],[11,"apply","peroxide::structure::sparse","",68,[[["vec",3]],["vec",3]]],[11,"kronecker","peroxide::structure::matrix","",51,[[]]],[11,"hadamard","","",51,[[],["matrix",3]]],[11,"col_mut","","",51,[[],["vec",3]]],[11,"row_mut","","",51,[[],["vec",3]]],[11,"swap","","",51,[[["shape",4]]]],[11,"swap_with_perm","","",51,[[["vec",3],["shape",4]]]],[11,"powi","peroxide::structure::ad","",36,[[]]],[11,"powf","","",36,[[]]],[11,"pow","","",36,[[]]],[11,"powi","peroxide::structure::polynomial","",65,[[]]],[11,"powf","","",65,[[]]],[11,"pow","","",65,[[]]],[11,"sqrt","","",65,[[]]],[11,"sin_cos","peroxide::structure::ad","",36,[[]]],[11,"sinh_cosh","","",36,[[]]],[11,"asin","","",36,[[]]],[11,"acos","","",36,[[]]],[11,"atan","","",36,[[]]],[11,"asinh","","",36,[[]]],[11,"acosh","","",36,[[]]],[11,"atanh","","",36,[[]]],[11,"exp","","",36,[[]]],[11,"ln","","",36,[[]]],[11,"log","","",36,[[]]],[11,"to_f64","","",36,[[]]],[11,"from_f64","","",36,[[]]],[11,"to_ad","","",36,[[],["ad",4]]],[11,"from_vec","peroxide::traits::pointer","",112,[[]]],[11,"red","","",112,[[]]],[11,"from_vec","","",112,[[]]],[11,"red","","",112,[[]]],[11,"row_ptr","peroxide::structure::matrix","Row pointer",51,[[],["vec",3]]],[11,"col_ptr","","",51,[[],["vec",3]]],[11,"call_stable","peroxide::structure::ad","",37,[[]]],[11,"call_stable","","",37,[[["ad",4]]]],[11,"call_stable","","",37,[[["vec",3]]]],[11,"call_stable","","",37,[[["vec",3],["ad",4]]]],[11,"resize","peroxide::structure::matrix","Resize matrix",51,[[["shape",4]],["matrix",3]]],[11,"add_row","","Add row",51,[[],["matrix",3]]],[11,"add_col","","Add column",51,[[],["matrix",3]]],[11,"resize_mut","","Resize matrix (Mutable)",51,[[["shape",4]]]],[11,"add_row_mut","","Add row (Mutable)",51,[[]]],[11,"add_col_mut","","Add column (Mutable)",51,[[]]],[11,"new","","",51,[[]]],[11,"new","","",51,[[["vec",3],["vec",3]]]],[11,"new","","",51,[[["shape",4],["vec",3]]]],[11,"set_domain","peroxide::util::plot","",100,[[["vec",3]]]],[11,"insert_image","","",100,[[["vec",3]]]],[11,"insert_pair","","",100,[[]]],[11,"set_title","","",100,[[]]],[11,"set_xlabel","","",100,[[]]],[11,"set_ylabel","","",100,[[]]],[11,"set_zlabel","","",100,[[]]],[11,"set_legend","","",100,[[["vec",3]]]],[11,"set_path","","",100,[[]]],[11,"set_fig_size","","",100,[[]]],[11,"set_dpi","","",100,[[]]],[11,"grid","","",100,[[["grid",4]]]],[11,"set_marker","","",100,[[["markers",4],["vec",3]]]],[11,"savefig","","",100,[[],["pyresult",6]]],[11,"print","peroxide::structure::matrix","",51,[[]]],[11,"print","peroxide::structure::polynomial","",65,[[]]],[11,"print","peroxide::structure::multinomial","",64,[[]]],[11,"print","peroxide::statistics::dist","",29,[[]]],[11,"print","","",30,[[]]],[11,"print","peroxide::structure::dataframe","",39,[[]]],[11,"print","","",40,[[]]],[11,"print","","",44,[[]]],[11,"print","","",43,[[]]],[11,"print","","",42,[[]]],[11,"print","peroxide::structure::ad","",36,[[]]],[11,"from","peroxide::numerical::spline","",26,[[["vec",3]]]],[11,"from","peroxide::structure::ad","",36,[[]]],[11,"into","peroxide::numerical::spline","",26,[[],[["polynomial",3],["vec",3]]]],[11,"into","","",26,[[],["vec",3]]],[11,"into","peroxide::structure::matrix","",51,[[],["vec",3]]],[11,"into","peroxide::structure::sparse","",68,[[],["matrix",3]]],[11,"into","peroxide::structure::matrix","",51,[[],["spmatrix",3]]],[11,"next_back","peroxide::structure::ad","",109,[[],["option",4]]],[11,"next_back","","",110,[[],["option",4]]],[11,"len","","",109,[[]]],[11,"len","","",110,[[]]],[11,"into_iter","","",36,[[]]],[11,"next","","",109,[[],["option",4]]],[11,"size_hint","","",109,[[]]],[11,"next","","",110,[[],["option",4]]],[11,"size_hint","","",110,[[]]],[11,"next","","",111,[[],["option",4]]],[11,"size_hint","","",111,[[]]],[11,"clone","peroxide::numerical::eigen","",6,[[],["eigenmethod",4]]],[11,"clone","","",7,[[],["eigen",3]]],[11,"clone","peroxide::numerical::integral","",9,[[],["integral",4]]],[11,"clone","peroxide::numerical::ode","",10,[[],["exmethod",4]]],[11,"clone","","",11,[[],["immethod",4]]],[11,"clone","","",12,[[],["boundarycondition",4]]],[11,"clone","","",13,[[],["odeoptions",4]]],[11,"clone","","",14,[[],["state",3]]],[11,"clone","","",16,[[],["explicitode",3]]],[11,"clone","","",17,[[],["implicitode",3]]],[11,"clone","","",108,[[],["noenv",3]]],[11,"clone","peroxide::numerical::optimize","",18,[[],["optmethod",4]]],[11,"clone","","",19,[[],["optoption",4]]],[11,"clone","peroxide::numerical::root","",21,[[],["rootstate",4]]],[11,"clone","","",22,[[],["rootfind",4]]],[11,"clone","","",23,[[],["rootfinder",3]]],[11,"clone","","",24,[[],["rooterror",4]]],[11,"clone","","",25,[[],["rootbool",4]]],[11,"clone","peroxide::numerical::spline","",26,[[],["cubicspline",3]]],[11,"clone","peroxide::statistics::dist","",29,[[],["opdist",4]]],[11,"clone","","",30,[[],["tpdist",4]]],[11,"clone","peroxide::statistics::stat","",35,[[],["qtype",4]]],[11,"clone","peroxide::structure::ad","",36,[[],["ad",4]]],[11,"clone","peroxide::structure::dataframe","",39,[[],["dtype",4]]],[11,"clone","","",40,[[],["dtypearray",4]]],[11,"clone","","",41,[[],["dtypevalue",4]]],[11,"clone","","",42,[[],["dataframe",3]]],[11,"clone","","",43,[[],["series",3]]],[11,"clone","","",44,[[],["scalar",3]]],[11,"clone","peroxide::structure::matrix","",50,[[],["shape",4]]],[11,"clone","","",51,[[],["matrix",3]]],[11,"clone","","",53,[[],["pqlu",3]]],[11,"clone","","",54,[[],["wazd",3]]],[11,"clone","","",55,[[],["form",4]]],[11,"clone","","",56,[[],["qr",3]]],[11,"clone","","",57,[[],["svd",3]]],[11,"clone","","",58,[[],["solvekind",4]]],[11,"clone","","",59,[[],["lapack_status",4]]],[11,"clone","","",60,[[],["svd_status",4]]],[11,"clone","","",61,[[],["dgetrf",3]]],[11,"clone","","",62,[[],["dgeqrf",3]]],[11,"clone","","",63,[[],["dgesvd",3]]],[11,"clone","peroxide::structure::multinomial","",64,[[],["multinomial",3]]],[11,"clone","peroxide::structure::polynomial","",65,[[],["polynomial",3]]],[11,"clone","","",67,[[],["specialkind",4]]],[11,"clone","peroxide::structure::sparse","",68,[[],["spmatrix",3]]],[11,"clone","peroxide::traits::math","",73,[[],["norm",4]]],[11,"clone","peroxide::util::plot","",96,[[],["plotoptions",4]]],[11,"clone","","",97,[[],["markers",4]]],[11,"clone","","",98,[[],["grid",4]]],[11,"clone","peroxide::util::writer","",103,[[],["towriter",4]]],[11,"clone","","",104,[[],["queue",4]]],[11,"clone","","",105,[[],["simplewriter",3]]],[11,"default","peroxide::numerical::ode","",14,[[],["state",3]]],[11,"default","","",108,[[],["noenv",3]]],[11,"default","peroxide::numerical::spline","",26,[[],["cubicspline",3]]],[11,"default","peroxide::structure::matrix","",50,[[]]],[11,"default","","",51,[[],["matrix",3]]],[11,"default","peroxide::structure::polynomial","",65,[[],["polynomial",3]]],[11,"eq","peroxide::numerical::integral","",9,[[["integral",4]]]],[11,"ne","","",9,[[["integral",4]]]],[11,"eq","peroxide::numerical::ode","",10,[[["exmethod",4]]]],[11,"eq","","",11,[[["immethod",4]]]],[11,"eq","","",12,[[["boundarycondition",4]]]],[11,"eq","","",13,[[["odeoptions",4]]]],[11,"eq","peroxide::numerical::optimize","",19,[[["optoption",4]]]],[11,"eq","peroxide::numerical::root","",22,[[["rootfind",4]]]],[11,"eq","","",25,[[["rootbool",4]]]],[11,"eq","peroxide::structure::ad","",36,[[["ad",4]]]],[11,"ne","","",36,[[["ad",4]]]],[11,"eq","peroxide::structure::dataframe","",39,[[["dtype",4]]]],[11,"eq","","",40,[[["dtypearray",4]]]],[11,"ne","","",40,[[["dtypearray",4]]]],[11,"eq","","",41,[[["dtypevalue",4]]]],[11,"ne","","",41,[[["dtypevalue",4]]]],[11,"eq","","",42,[[["dataframe",3]]]],[11,"ne","","",42,[[["dataframe",3]]]],[11,"eq","","",43,[[["series",3]]]],[11,"ne","","",43,[[["series",3]]]],[11,"eq","","",44,[[["scalar",3]]]],[11,"ne","","",44,[[["scalar",3]]]],[11,"eq","peroxide::structure::matrix","",50,[[["shape",4]]]],[11,"eq","","",51,[[["matrix",3]]]],[11,"eq","","",59,[[["lapack_status",4]]]],[11,"eq","","",60,[[["svd_status",4]]]],[11,"ne","","",60,[[["svd_status",4]]]],[11,"eq","peroxide::structure::polynomial","",67,[[["specialkind",4]]]],[11,"eq","peroxide::util::plot","",96,[[["plotoptions",4]]]],[11,"eq","","",97,[[["markers",4]]]],[11,"eq","","",98,[[["grid",4]]]],[11,"eq","peroxide::util::writer","",103,[[["towriter",4]]]],[11,"partial_cmp","peroxide::numerical::ode","",10,[[["exmethod",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",11,[[["immethod",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",12,[[["boundarycondition",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",13,[[["odeoptions",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","peroxide::numerical::optimize","",19,[[["optoption",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","peroxide::structure::ad","",36,[[["ad",4]],[["ordering",4],["option",4]]]],[11,"lt","","",36,[[["ad",4]]]],[11,"le","","",36,[[["ad",4]]]],[11,"gt","","",36,[[["ad",4]]]],[11,"ge","","",36,[[["ad",4]]]],[11,"partial_cmp","peroxide::structure::dataframe","",41,[[["dtypevalue",4]],[["ordering",4],["option",4]]]],[11,"lt","","",41,[[["dtypevalue",4]]]],[11,"le","","",41,[[["dtypevalue",4]]]],[11,"gt","","",41,[[["dtypevalue",4]]]],[11,"ge","","",41,[[["dtypevalue",4]]]],[11,"partial_cmp","peroxide::util::plot","",96,[[["plotoptions",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",97,[[["markers",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",98,[[["grid",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","peroxide::util::writer","",103,[[["towriter",4]],[["ordering",4],["option",4]]]],[11,"deref","peroxide::traits::pointer","",112,[[]]],[11,"fmt","peroxide::numerical::eigen","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::numerical::integral","",9,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::numerical::ode","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::numerical::optimize","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::numerical::root","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::numerical::spline","",26,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::statistics::dist","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::statistics::stat","",35,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::structure::ad","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::structure::dataframe","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::structure::matrix","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::structure::multinomial","",64,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::structure::polynomial","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::structure::sparse","",68,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::traits::math","",73,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::traits::pointer","",112,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::util::plot","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::util::writer","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::numerical::root","",24,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::structure::ad","",36,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::structure::dataframe","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::structure::matrix","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::structure::multinomial","",64,[[["formatter",3]],["result",6]]],[11,"fmt","peroxide::structure::polynomial","",65,[[["formatter",3]],["result",6]]],[11,"div","peroxide::structure::ad","",36,[[["ad",4]]]],[11,"div","","",36,[[]]],[11,"div","peroxide::structure::matrix","",51,[[]]],[11,"div","","",51,[[]]],[11,"div","","",51,[[]]],[11,"div","","",51,[[]]],[11,"div","peroxide::structure::polynomial","",65,[[]]],[11,"div","","",65,[[]]],[11,"div","peroxide::traits::pointer","",112,[[["redox",3]]]],[11,"div","","",112,[[]]],[11,"sub","peroxide::structure::ad","",36,[[["ad",4]]]],[11,"sub","","",36,[[]]],[11,"sub","peroxide::structure::matrix","",51,[[]]],[11,"sub","","",51,[[]]],[11,"sub","peroxide::structure::polynomial","",65,[[]]],[11,"sub","","",65,[[]]],[11,"sub","peroxide::traits::pointer","",112,[[["redox",3]]]],[11,"sub","","",112,[[]]],[11,"add","peroxide::structure::ad","",36,[[["ad",4]]]],[11,"add","","",36,[[]]],[11,"add","peroxide::structure::matrix","",51,[[]]],[11,"add","","",51,[[]]],[11,"add","peroxide::structure::polynomial","",65,[[]]],[11,"add","","",65,[[]]],[11,"add","peroxide::traits::pointer","",112,[[["redox",3]]]],[11,"add","","",112,[[]]],[11,"mul","peroxide::structure::ad","",36,[[["ad",4]]]],[11,"mul","","",36,[[]]],[11,"mul","peroxide::structure::matrix","",51,[[]]],[11,"mul","","",51,[[]]],[11,"mul","","",51,[[]]],[11,"mul","","",51,[[]]],[11,"mul","","",51,[[]]],[11,"mul","","",51,[[["vec",3]]]],[11,"mul","peroxide::structure::polynomial","",65,[[]]],[11,"mul","","",65,[[]]],[11,"mul","peroxide::structure::sparse","",68,[[["vec",3]]]],[11,"mul","peroxide::traits::pointer","",112,[[["redox",3]]]],[11,"mul","","",112,[[]]],[11,"mul","peroxide::structure::matrix","",51,[[["vec",3],["redox",3]]]],[11,"mul","peroxide::structure::sparse","",68,[[["vec",3],["redox",3]]]],[11,"neg","peroxide::structure::ad","",36,[[]]],[11,"neg","peroxide::structure::matrix","",51,[[]]],[11,"neg","peroxide::structure::polynomial","",65,[[]]],[11,"index","peroxide::numerical::spline","",26,[[]]],[11,"index","peroxide::structure::ad","",36,[[]]],[11,"index","peroxide::structure::dataframe","",42,[[]]],[11,"index","","",42,[[]]],[11,"index","peroxide::structure::matrix","",51,[[]]],[11,"index_mut","peroxide::structure::ad","",36,[[]]],[11,"index_mut","peroxide::structure::dataframe","",42,[[]]],[11,"index_mut","","",42,[[]]],[11,"index_mut","peroxide::structure::matrix","",51,[[]]],[11,"hash","peroxide::numerical::ode","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","peroxide::numerical::optimize","",19,[[]]],[11,"hash","peroxide::util::plot","",96,[[]]],[11,"hash","","",97,[[]]],[11,"hash","","",98,[[]]],[11,"hash","peroxide::util::writer","",103,[[]]],[11,"from_iter","peroxide::structure::ad","",36,[[["intoiterator",8]]]],[11,"from_iter","","",36,[[["intoiterator",8]]]],[11,"serialize","peroxide::numerical::spline","",26,[[],["result",4]]],[11,"serialize","peroxide::structure::polynomial","",65,[[],["result",4]]],[11,"deserialize","peroxide::numerical::spline","",26,[[],["result",4]]],[11,"deserialize","peroxide::structure::polynomial","",65,[[],["result",4]]],[11,"is","peroxide::structure::matrix","Returns <code>true</code> if the boxed type is the same as <code>T</code>",49,[[]]],[11,"downcast_ref","","Returns some reference to the boxed value if it is of …",49,[[],["option",4]]],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it …",49,[[],["option",4]]],[11,"is","","Forwards to the method defined on the type <code>dyn Error</code>.",49,[[]]],[11,"downcast_ref","","Forwards to the method defined on the type <code>dyn Error</code>.",49,[[],["option",4]]],[11,"downcast_mut","","Forwards to the method defined on the type <code>dyn Error</code>.",49,[[],["option",4]]],[11,"is","","Forwards to the method defined on the type <code>dyn Error</code>.",49,[[]]],[11,"downcast_ref","","Forwards to the method defined on the type <code>dyn Error</code>.",49,[[],["option",4]]],[11,"downcast_mut","","Forwards to the method defined on the type <code>dyn Error</code>.",49,[[],["option",4]]],[11,"downcast","","Attempts to downcast the box to a concrete type.",49,[[["box",3],["error",8],["global",3]],[["box",3],["result",4],["box",3]]]],[11,"chain","","Returns an iterator starting with the current error and …",49,[[],["chain",3]]],[11,"downcast","","Attempts to downcast the box to a concrete type.",49,[[["error",8],["box",3],["global",3]],[["result",4],["box",3],["box",3]]]],[11,"downcast","","Attempts to downcast the box to a concrete type.",49,[[["box",3],["error",8],["global",3]],[["result",4],["box",3],["box",3]]]]],"p":[[8,"Distribution"],[8,"IteratorRandom"],[8,"SliceRandom"],[8,"Rng"],[8,"RngCore"],[8,"SeedableRng"],[4,"EigenMethod"],[3,"Eigen"],[3,"JacobiTemp"],[4,"Integral"],[4,"ExMethod"],[4,"ImMethod"],[4,"BoundaryCondition"],[4,"ODEOptions"],[3,"State"],[8,"ODE"],[3,"ExplicitODE"],[3,"ImplicitODE"],[4,"OptMethod"],[4,"OptOption"],[3,"Optimizer"],[4,"RootState"],[4,"RootFind"],[3,"RootFinder"],[4,"RootError"],[4,"RootBool"],[3,"CubicSpline"],[8,"SimpleNorm"],[8,"SimplerLinearAlgebra"],[4,"OPDist"],[4,"TPDist"],[8,"ParametricDist"],[8,"RNG"],[8,"Statistics"],[8,"OrderedStat"],[4,"QType"],[4,"AD"],[3,"ADFn"],[8,"ADVec"],[4,"DType"],[4,"DTypeArray"],[4,"DTypeValue"],[3,"DataFrame"],[3,"Series"],[3,"Scalar"],[8,"TypedScalar"],[8,"TypedVector"],[8,"WithCSV"],[8,"WithNetCDF"],[8,"Error"],[4,"Shape"],[3,"Matrix"],[8,"LinearAlgebra"],[3,"PQLU"],[3,"WAZD"],[4,"Form"],[3,"QR"],[3,"SVD"],[4,"SolveKind"],[4,"LAPACK_STATUS"],[4,"SVD_STATUS"],[3,"DGETRF"],[3,"DGEQRF"],[3,"DGESVD"],[3,"Multinomial"],[3,"Polynomial"],[8,"Calculus"],[4,"SpecialKind"],[3,"SPMatrix"],[8,"FPVector"],[8,"FPMatrix"],[8,"Algorithm"],[8,"Vector"],[4,"Norm"],[8,"Normed"],[8,"InnerProduct"],[8,"LinearOp"],[8,"VectorProduct"],[8,"MatrixProduct"],[8,"MutFP"],[8,"MutMatrix"],[8,"PowOps"],[8,"TrigOps"],[8,"ExpLogOps"],[8,"Real"],[8,"RedoxCommon"],[8,"Oxide"],[8,"MatrixPtr"],[8,"StableFn"],[8,"VecOps"],[8,"Scalable"],[8,"ScalableMut"],[8,"ConvToMat"],[8,"MATLAB"],[8,"PYTHON"],[8,"R"],[4,"PlotOptions"],[4,"Markers"],[4,"Grid"],[8,"Plot"],[3,"Plot2D"],[8,"Printable"],[8,"SampleRNG"],[4,"ToWriter"],[4,"Queue"],[3,"SimpleWriter"],[3,"StdRng"],[3,"ThreadRng"],[3,"NoEnv"],[3,"ADIntoIter"],[3,"ADIter"],[3,"ADIterMut"],[3,"Redox"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);